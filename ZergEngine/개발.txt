- 스크립트가 메인 런타임 루프 흐름에서만 실행됨을 보장한다면 GameObject, 컴포넌트들에 대해 인터락스마트포인터들을 사용하지 않아도 된다. (성능 ↑)
(게임 컨텐츠 로직의 싱글스레드화) - But 시스템 내부 동작이랑 구현 호환될지는 생각해봐야함

- [HandleDevice 다듬기] 창 크기가 바뀐게 아니거나 창 최소화 했다가 다시 복구하는 등의 경우에는 RESIZE 하지 않게!

- 렌더링 루프에서 Effect 객체 얻어오는거 전역에서 얻어오게 하기 (굳이 지역객체로 매번 생성 해제할 필요 없음)

- Terrain 지원

- 이펙트 객체들 Render 함수 내에서 API 콜 횟수 줄이기 (이미 설정된거 동일하게 또 다시 설정하는 등)

- 런타임에 MSAA 설정 변경 가능하게 하기

- 라이팅 상수버퍼 전역 관리자에서 가져와서 세팅하게 변경하기 (지금은 하드코딩된 상태)

------------ HLSL에서 SamplerState 정의
------------ VertexShader에서의 t0 레지스터와 HullShader에서의 t0 레지스터와 PixelShader에서의 t0 레지스터는 모두 동일 주소인가?

- 서브셋 렌더링 루프에서 같은 재질 사용 시 재질 상수버퍼 및 BaseMapSRV 변경 안하게 개선하자 (첫 업데이트는 세팅 필요하므로 예외처리해주고)

- reactphysics3d 통합

- FATAL ERROR, 진행 가능한 오류 구분해서 로그 및 크래시 상황 명확히 재정립 (hrlog 호출부를 포함해서 모두 점검)

- 반투명 재질 지원 (Water, Glass, ...) (렌더링 순서 고려?!)

- BVH기반 프러스텀 컬링 추가 (KD-Tree)

- 맨 처음에 메인 카메라 렌더링 안되는 이유 알아내기 [해결완료] (D3D11_VIEWPORT구조체랑 투영행렬 제대로 초기화 안되었었음)

Awake는 씬 매니저에서 새로운 씬으로 교체 후 deferred gameobject들을 GameObjectManager에 모두 옮긴 다음에야 호출되어야 한다!!!
근데 지금 문제가 이러면 기존에 dontdestroyonload 애들이랑 같이 섞여서 호출되므로 문제다...
https://docs.unity3d.com/kr/2022.3/Manual/ExecutionOrder.html 참고하면 힌트를 얻을 수 있을지도...
스크립트를 소유한 GameObject가 파괴될때는 OnDestroy가, GameObject가 Disable될때는 OnDisable가 호출됨.
GameObject가 (활성화된 상태로)씬에 처음 추가될때, 또는 비활성화상태에서 활성화 상태가 될 때마다 OnEnable가 호출됨.



- Baking Light map (구현하기 비교적 어려운 기능) (같은 오브젝트에 같은 텍스쳐를 사용하더라도 라이팅 영향 다르게 받으면 서로 다른 텍스쳐를 구워내서 결과를 따로 저장해둬야 하므로... 이런 구조적인 부분들도 심도깊게 고민해봐야 한다. 구운 텍스쳐들을 각가 어떻게 관리할것인지 등...)
건물, 지형 등 정적인 메시에 대해서 정적 라이팅된 상태를 텍스쳐에 구워두는 것 -> KD Tree 필요
