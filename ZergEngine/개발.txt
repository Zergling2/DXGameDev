- 스크립트가 메인 런타임 루프 흐름에서만 실행됨을 보장한다면 GameObject, 컴포넌트들에 대해 인터락스마트포인터들을 사용하지 않아도 된다. (성능 ↑)
(게임 컨텐츠 로직의 싱글스레드화) - 시스템 내부 동작이랑 구현 호환될지는 생각해봐야 함

- 에디터에서 런타임에서 로드 가능한 씬 클래스를 생성해내려면 C++ 리플렉션 시스템 구현해내야 함..

- 서브셋 렌더링 루프에서 같은 재질 사용 시 재질 상수버퍼 및 BaseMapSRV 변경 안하게 개선하자 (첫 업데이트는 세팅 필요하므로 예외처리해주고)

- bullet physics 통합

- FATAL ERROR, 진행 가능한 오류 구분해서 로그 및 크래시 상황 명확히 재정립 (hrlog 호출부를 포함해서 모두 점검)

- 반투명 재질 OIT 렌더링

Awake는 씬 매니저에서 새로운 씬으로 교체 후 deferred gameobject들을 GameObjectManager에 모두 옮긴 다음에야 호출되어야 한다!!!
근데 지금 문제가 이러면 기존에 dontdestroyonload 애들이랑 같이 섞여서 호출되므로 문제다...
https://docs.unity3d.com/kr/2022.3/Manual/ExecutionOrder.html 참고하면 힌트를 얻을 수 있을지도...
스크립트를 소유한 GameObject가 파괴될때는 OnDestroy가, GameObject가 Disable될때는 OnDisable가 호출됨.
GameObject가 (활성화된 상태로)씬에 처음 추가될때, 또는 비활성화상태에서 활성화 상태가 될 때마다 OnEnable가 호출됨.



- Baking Light map 건물, 지형 등 정적인 메시에 대해서 정적 라이팅된 상태를 텍스쳐에 구워두는 것
(같은 오브젝트에 같은 텍스쳐를 사용하더라도 라이팅 영향 다르게 받으면 서로 다른 텍스쳐를 구워내서 결과를 따로 저장해둬야 할텐데...
구운 텍스쳐들을 각각 어떻게 관리해야 하는가?..) + 텍스쳐가 타일링된 경우에도 서로 다른 조명을 받는 경우 라이트맵을 여러 벌 생성해야 하는건가? 근데 그렇게 생성된 라이트맵을 관리하는건 둘째치고 텍스쳐 좌표가 각각의 구워진 라이트맵에 대응되지를 않아서 라이트맵을 쓸 수가 없을 것 같은데...  (복잡)
